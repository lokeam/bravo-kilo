  .grid_carousel {
    grid-auto-rows: 0;
    content-visibility: auto;
  }

  @media (min-width: 896px) {
    .grid_carousel {
      overflow: hidden;
    }
  }


  .gridContainerTempCols {
    grid-template-columns: repeat(auto-fill,minmax(var(--min-column-width-sm),1fr));
  }

  @media (min-width: 1630px) {
      .gridContainerTempCols {
        grid-template-columns: repeat(auto-fill,minmax(var(--min-column-width-lg),1fr));
      }
  }

  .card_wrapper {
    row-gap: var(--encore-spacing-tighter, 8px);
    padding-inline: 12px;
    padding-block: 12px;
    min-block-size: 48px;
    -o-transition: var(--hover-transition-1);
    -ms-transition: var(--hover-transition-1);
    -moz-transition: var(--hover-transition-1);
    -webkit-transition: var(--hover-transition-1);
    transition: var(--hover-transition-1);
    z-index: 5;
  }

  .thumbnail {
    z-index: 10;
  }

  .card_wrapper:hover {
    border-radius: 6px;
  }

  .card-copy,
  .copy_container {
    max-width: 99%;
  }

  .card_thumbnail_container {
    padding-bottom: 100%;
  }
/* refactor styles */
  .bookshelf_body {

    /* Standard Properties */
    scrollbar-color: #6366F1 #111827;
    scrollbar-width: thin;

    /* Safari */
    ::-webkit-scrollbar {
      /** the scrollbar */
      background-color: #111827;
    }
    ::-webkit-scrollbar-button {
      /** the up- and down- arrow buttons on the scrollbar */
    }
    ::-webkit-scrollbar-track {
      /** the progress bar track of the scrollbar */
      background-color: #111827;
    }
    ::-webkit-scrollbar-track-piece {
      /** the progress bar track NOT covered by the handle */
      background-color: #111827;
    }
    ::-webkit-scrollbar-thumb {
      /** the draggable scrolling handle */
      background-color: #6366F1;
    }
    ::-webkit-scrollbar-corner {
      /** the bottom corner of the scrollbar, where both horizontal and vertical scrollbar meet */
      background-color: #111827;
    }
    ::-webkit-resizer {
      /** the draggable resizing handle that appears at the bottom corner of some elements */
      background-color: #111827;
    }
  }

  .bookshelf_grid {
    -moz-column-gap: var(--grid-column-gap-xsmall);
    column-gap: var(--grid-column-gap-xsmall);
    grid-auto-columns: var(--grid-max-content-xsmall,calc((100% - (var(--grid-xsmall) - 1)*var(--grid-column-gap-xsmall))/var(--grid-xsmall)));
    grid-template-rows: repeat(var(--grid-rows),max-content);
    row-gap: var(--grid-row-gap-xsmall);

  }

  .bookshelf_grid_library {
      -moz-column-gap: var(--grid-column-gap-small);
      column-gap: var(--grid-column-gap-small);
      grid-auto-columns: var(
        --grid-max-content-small,
        calc(
          (100% - (var(--grid-small) - 1) * var(--grid-column-gap-small)) /
            var(--grid-small)
        )
      );
      grid-template-rows: repeat(var(--grid-rows), max-content);
      row-gap: var(--grid-row-gap-small);
  }

  .bookshelf_grid_item {
    contain: content;
    scroll-snap-align: start
  }

  @media (min-width: 1000px) {
    .bookshelf_grid {
      -moz-column-gap: var(--grid-column-gap-small);
      column-gap: var(--grid-column-gap-small);
      grid-auto-columns: var(
        --grid-max-content-small,
        calc(
          (100% - (var(--grid-small) - 1) * var(--grid-column-gap-small)) /
            var(--grid-small)
        )
      );
      grid-template-rows: repeat(var(--grid-rows), max-content);
      row-gap: var(--grid-row-gap-small);
    }
  }

  @media (min-width: 1260px) and (max-width: 1579px){
    .bookshelf_grid {
      -moz-column-gap: var(--grid-column-gap-medium);
      column-gap: var(--grid-column-gap-medium);
      grid-auto-columns: var(
        --grid-max-content-medium,
        calc(
          (100% - (var(--grid-medium) - 1) * var(--grid-column-gap-medium)) /
            var(--grid-medium)
        )
      );
      grid-template-rows: repeat(var(--grid-rows), max-content);
      row-gap: var(--grid-row-gap-medium);
    }
  }

  @media (min-width: 1580px) {
    .bookshelf_grid {
      -moz-column-gap: var(--grid-column-gap-large);
      column-gap: var(--grid-column-gap-large);
      grid-auto-columns: var(
        --grid-max-content-large,
        calc(
          (100% - (var(--grid-large) - 1) * var(--grid-column-gap-large)) /
            var(--grid-large)
        )
      );
      grid-template-rows: repeat(var(--grid-rows), max-content);
      row-gap: var(--grid-row-gap-large);
    }
  }